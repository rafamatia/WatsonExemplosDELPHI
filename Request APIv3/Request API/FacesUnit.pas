unit FacesUnit;

{*******************************************************************************
    Generated By   : JsonToDelphiClass - 0.65 
    Project link   : https://github.com/PKGeorgiev/Delphi-JsonToDelphiClass
    Generated On   : 2018-10-19 14:44:18

    Created By     : Petar Georgiev - (http://pgeorgiev.com) 
    Adapted Web By : Marlon Nardi - (http://jsontodelphi.com)
*******************************************************************************}

interface

uses Generics.Collections, Rest.Json;

type

TGenderClass = class
private
  FGender: String;
  FScore: Extended;
public
  property gender: String read FGender write FGender;
  property score: Extended read FScore write FScore;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TGenderClass;
end;

TFace_locationClass = class
private
  FHeight: Extended;
  FLeft: Extended;
  FTop: Extended;
  FWidth: Extended;
public
  property height: Extended read FHeight write FHeight;
  property left: Extended read FLeft write FLeft;
  property top: Extended read FTop write FTop;
  property width: Extended read FWidth write FWidth;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TFace_locationClass;
end;

TAgeClass = class
private
  FMax: Extended;
  FMin: Extended;
  FScore: Extended;
public
  property max: Extended read FMax write FMax;
  property min: Extended read FMin write FMin;
  property score: Extended read FScore write FScore;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TAgeClass;
end;

TFacesClass = class
private
  FAge: TAgeClass;
  FFace_location: TFace_locationClass;
  FGender: TGenderClass;
public
  property age: TAgeClass read FAge write FAge;
  property face_location: TFace_locationClass read FFace_location write FFace_location;
  property gender: TGenderClass read FGender write FGender;
  constructor Create;
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TFacesClass;
end;

TImageFaceClass = class
private
  FFaces: TArray<TFacesClass>;
public
  property faces: TArray<TFacesClass> read FFaces write FFaces;
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TImageFaceClass;
end;

TRootFaceClass = class
private
  FImages: TArray<TImageFaceClass>;
  FImages_processed: Extended;
public
  property images: TArray<TImageFaceClass> read FImages write FImages;
  property images_processed: Extended read FImages_processed write FImages_processed;
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TRootFaceClass;
end;

implementation

{TGenderClass}


function TGenderClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TGenderClass.FromJsonString(AJsonString: string): TGenderClass;
begin
  result := TJson.JsonToObject<TGenderClass>(AJsonString)
end;

{TFace_locationClass}


function TFace_locationClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TFace_locationClass.FromJsonString(AJsonString: string): TFace_locationClass;
begin
  result := TJson.JsonToObject<TFace_locationClass>(AJsonString)
end;

{TAgeClass}


function TAgeClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TAgeClass.FromJsonString(AJsonString: string): TAgeClass;
begin
  result := TJson.JsonToObject<TAgeClass>(AJsonString)
end;

{TFacesClass}

constructor TFacesClass.Create;
begin
  inherited;
  FAge := TAgeClass.Create();
  FFace_location := TFace_locationClass.Create();
  FGender := TGenderClass.Create();
end;

destructor TFacesClass.Destroy;
begin
  FAge.Free;
  FFace_location.Free;
  FGender.Free;
  inherited;
end;

function TFacesClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TFacesClass.FromJsonString(AJsonString: string): TFacesClass;
begin
  result := TJson.JsonToObject<TFacesClass>(AJsonString)
end;

{TImageFaceClass}

destructor TImageFaceClass.Destroy;
var
  LfacesItem: TFacesClass;
begin

 for LfacesItem in FFaces do
   LfacesItem.Free;

  inherited;
end;

function TImageFaceClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TImageFaceClass.FromJsonString(AJsonString: string): TImageFaceClass;
begin
  result := TJson.JsonToObject<TImageFaceClass>(AJsonString)
end;

{TRootFaceClass}

destructor TRootFaceClass.Destroy;
var
  LimagesItem: TImageFaceClass;
begin

 for LimagesItem in FImages do
   LimagesItem.Free;

  inherited;
end;

function TRootFaceClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TRootFaceClass.FromJsonString(AJsonString: string): TRootFaceClass;
begin
  result := TJson.JsonToObject<TRootFaceClass>(AJsonString)
end;

end.
